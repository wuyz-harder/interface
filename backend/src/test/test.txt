该项目的前端分别是用vue、react实现的，后端是express以及nest.js
一共包括以下功能：登录、项目管理、接口管理、人员管理、WebSocket测试工具集成、人员调整实时通知等。前端：登录功能采用axios的请求拦截器给header添加token，token采用本地缓存的方式。响应拦截器判断响应码是否是403对响应进行拦截。基本实现了项目、接口还有人员的增删改查页面，对于增加按钮、增加界面、项目展示、搜索框等模块组件进行了封装。在此网页还集成了WebSocket测试工具，可以批量上传并读取本地的测试案例，进行网页上的全自动化测试、结果呈现，利用WebSocket协议，还实现了实时通知被修改者的功能。这个项目中，Vue用的本地缓存进行各个组件的通信，React采用Redux;第三方样式组件库采用的是element-ui + antd;
后端：分别用了express、nestjs实现了基本功能的增删改查，同时也支持以文件的形式批量上传保存。通过拦截器来解决跨域问题以及登录问题。Nest.js利用管道对每个请求的参数进行提前校验、通过第三方库集成WebSocket，保持与客户端的连接，减少轮询带来的压力，同时利用es6新特性Map设置缓存，并且根据项目的需要去刷新缓存，大大减少了查询的压力，最后还对数据库查询工具进行了封装。